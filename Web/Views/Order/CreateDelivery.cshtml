@model CreateDeliveryCommand

@{
    ViewData["Title"] = "Формирование доставки";

    var locations = (List<LocationDto>)ViewData["Locations"];
}

<main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg ">
    <!-- Navbar -->
    <nav class="navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl" id="navbarBlur" data-scroll="true">
        <div class="container-fluid py-1 px-3">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5">
                    <li class="breadcrumb-item text-sm text-dark active" aria-current="page">@ViewData["Title"]</li>
                </ol>
            </nav>
        </div>
    </nav>
    <!-- End Navbar -->
    <div class="container-fluid py-4">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto">
                <form asp-action="Create" method="post">
                    <div class="card mt-4">
                        <div class="card-header p-3">
                            <h5 class="mb-0">@ViewData["Title"]</h5>
                        </div>
                        <div class="card-body pb-0">
                            <div class="row mb-3">
                                @*<div class="input-group input-group-outline mb-3">
                                    <label class="form-label">Наименование</label>
                                    <input asp-for="@Model.Name" class="form-control">
                                    <span asp-validation-for="@Model.Name" class="invalid-feedback"></span>
                                </div>*@
                                @*<div class="col-3">
                                <button class="btn bg-gradient-success w-100 mb-0 toast-btn" type="submit">Сохранить</button>
                                </div>
                                <div class="col-3">
                                <a asp-action="Index" class="btn bg-gradient-dark w-100 mb-0">Назад</a>
                                </div>*@
                            </div>
                        </div>
                    </div>
                    <div class="card mt-4">
                        <div class="card-header p-3">
                            <h5 class="mb-0">Добавление локаций магазинов</h5>
                        </div>
                        <div class="card-body p-3">
                            <div class="row">
                                <div id="map-container" style="width: 600px; height: 400px" class="col-12">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-3">
                                    <button class="btn bg-gradient-success w-100 mb-0 toast-btn" type="submit">Сохранить</button>
                                </div>
                                <div class="col-3">
                                    <a asp-action="Index" class="btn bg-gradient-dark w-100 mb-0">Назад</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</main>

<script src="https://api-maps.yandex.ru/2.1/?apikey=5f4c994f-0203-4246-b7a2-23cf14243273&lang=ru_RU"></script>
<script type="text/javascript">

    ymaps.ready(function() {
        var map = new ymaps.Map("map-container", {
            center: [42.875969, 74.603701], // Set the initial map center coordinates
            zoom: 12 // Set the initial zoom level
        });

        var marker = new ymaps.Placemark(
            [42.875969, 74.603701],
            {
                hintContent: 'Marker Hint', // Tooltip text
                balloonContent: 'Marker Balloon' // Balloon text
            },
            {
                preset: 'islands#redIcon', // Marker icon style
                draggable: true // Allow marker dragging
            }
        );

        map.geoObjects.add(marker);

        marker.events.add('geometrychange', function(event) {
            // Get the current position of the marker
            var currentPosition = event.get('target').geometry.getCoordinates();

            var periodStart = $(this).closest('tr').children('td:eq(0)').text();


            // Access the latitude and longitude
            var markerLatitude = currentPosition[0];
            var markerLongitude = currentPosition[1];

            // Log the coordinates
            console.log("Marker Latitude:", markerLatitude);
            console.log("Marker Longitude:", markerLongitude);

            $('#locationTable tr:eq(' + currentRow + ')').find('.lang').val(markerLongitude);
            $('#locationTable tr:eq(' + currentRow + ')').find('.lat').val(markerLatitude);

            getAddress(currentPosition);
        });

        // Слушаем клик на карте.
        //map.events.add('click', function (e) {
        //    debugger;
        //    var coords = e.get('coords');

        //    // Если метка уже создана – просто передвигаем ее.
        //    if (marker) {
        //        marker.geometry.setCoordinates(coords);
        //    }
        //    // Если нет – создаем.
        //    else {
        //        marker = createPlacemark(coords);
        //        marker.geoObjects.add(myPlacemark);
        //        // Слушаем событие окончания перетаскивания на метке.
        //        marker.events.add('dragend', function () {
        //            getAddress(marker.geometry.getCoordinates());
        //        });
        //    }
        //    getAddress(coords);
        //});

        // Определяем адрес по координатам (обратное геокодирование).
        function getAddress(coords) {
            marker.properties.set('iconCaption', 'поиск...');
            ymaps.geocode(coords).then(function(res) {
                var firstGeoObject = res.geoObjects.get(0);
                console.log(firstGeoObject.getAdministrativeAreas());
                debugger;
                marker.properties
                    .set({
                        // Формируем строку с данными об объекте.
                        iconCaption: [
                            // Название населенного пункта или вышестоящее административно-территориальное образование.
                            firstGeoObject.getLocalities().length ? firstGeoObject.getLocalities() : firstGeoObject.getAdministrativeAreas(),
                            // Получаем путь до топонима, если метод вернул null, запрашиваем наименование здания.
                            firstGeoObject.getThoroughfare() || firstGeoObject.getPremise()
                        ].filter(Boolean).join(', '),
                        // В качестве контента балуна задаем строку с адресом объекта.
                        balloonContent: firstGeoObject.getAdministrativeAreas(),
                    });
                $('#locationTable tr:eq(' + currentRow + ')').find('.address').val(firstGeoObject.getAddressLine());
            });
        }
    });
</script>
